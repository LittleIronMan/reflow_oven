// сообщение - команда
//syntax = "proto3";
//import "nanopb.proto";

message Oven_Command {
	enum CommandType {
		START = 0;
		GET_TEMP_PROFILE = 1;
		STOP = 2;
	}
	required CommandType type = 1;
}

// структура сообщения, хранящего в себе температурный профиль
message TempProfile {
	message TempMeasure {
		required uint32 time = 1;
		required uint32 temp = 2;
	}
	repeated TempMeasure data = 1 [(nanopb).max_count = 20, (nanopb).fixed_count = true];
}


// другие примеры кода
/*
syntax = "proto3";

message Car {
  required string model = 1;

  enum BodyType {
    sedan = 0;
    hatchback = 1;
    SUV = 2;
  }

  required BodyType type = 2 [default = sedan];
  optional string color = 3;
  required int32 year = 4;

  message Owner {
    required string name = 1;
    required string lastName = 2; 
    required int64 driverLicense = 3;
  }

  repeated Owner previousOwner = 5;
}
*/
